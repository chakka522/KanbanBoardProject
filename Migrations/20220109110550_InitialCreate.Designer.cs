// <auto-generated />
using KanbanBoard.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KanbanBoard.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220109110550_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("KanbanBoard.Models.Login", b =>
                {
                    b.Property<int>("login_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email_id")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<int>("signup_id")
                        .HasColumnType("integer");

                    b.HasKey("login_id");

                    b.HasIndex("signup_id");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("KanbanBoard.Models.Project", b =>
                {
                    b.Property<int>("project_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("project_name")
                        .HasColumnType("text");

                    b.Property<int>("task_id")
                        .HasColumnType("integer");

                    b.HasKey("project_id");

                    b.HasIndex("task_id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("KanbanBoard.Models.Signup", b =>
                {
                    b.Property<int>("signup_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email_id")
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .HasColumnType("text");

                    b.Property<string>("last_name")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<int>("phone_number")
                        .HasColumnType("integer");

                    b.HasKey("signup_id");

                    b.ToTable("Signup");
                });

            modelBuilder.Entity("KanbanBoard.Models.Tasks", b =>
                {
                    b.Property<int>("task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("task_name")
                        .HasColumnType("text");

                    b.HasKey("task_id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("KanbanBoard.Models.TeamMembers", b =>
                {
                    b.Property<int>("teammember_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("project_id")
                        .HasColumnType("integer");

                    b.Property<int>("task_id")
                        .HasColumnType("integer");

                    b.Property<string>("teammember_designation")
                        .HasColumnType("text");

                    b.Property<string>("teammember_name")
                        .HasColumnType("text");

                    b.HasKey("teammember_id");

                    b.HasIndex("project_id");

                    b.HasIndex("task_id");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("KanbanBoard.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("project_id")
                        .HasColumnType("integer");

                    b.Property<int>("task_id")
                        .HasColumnType("integer");

                    b.Property<int>("teammember_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_designation")
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.HasIndex("project_id");

                    b.HasIndex("task_id");

                    b.HasIndex("teammember_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KanbanBoard.Models.Login", b =>
                {
                    b.HasOne("KanbanBoard.Models.Signup", "Signup")
                        .WithMany()
                        .HasForeignKey("signup_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanbanBoard.Models.Project", b =>
                {
                    b.HasOne("KanbanBoard.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanbanBoard.Models.TeamMembers", b =>
                {
                    b.HasOne("KanbanBoard.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanbanBoard.Models.Users", b =>
                {
                    b.HasOne("KanbanBoard.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.Models.TeamMembers", "TeamMembers")
                        .WithMany()
                        .HasForeignKey("teammember_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
